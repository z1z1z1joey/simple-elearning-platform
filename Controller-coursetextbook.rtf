{\rtf1\ansi\ansicpg950\cocoartf1561\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 class CoursetextbooksController < ApplicationController\
  before_action :authenticate_user!\
  before_action :set_coursetextbook, only: [:show, :edit, :update, :destroy]\
    before_action :set_course\
\
  # GET /coursetextbooks\
  # GET /coursetextbooks.json\
  def index\
    @coursetextbooks = Coursetextbook.all\
  end\
\
  # GET /coursetextbooks/1\
  # GET /coursetextbooks/1.json\
  def show\
  end\
\
  # GET /coursetextbooks/new\
  def new\
    @coursetextbook = Coursetextbook.new\
  end\
\
  # GET /coursetextbooks/1/edit\
  def edit\
  end\
\
  # POST /coursetextbooks\
  # POST /coursetextbooks.json\
  def create\
    @coursetextbook = @course.coursetextbooks.build(coursetextbook_params)\
    if @coursetextbook.save\
      redirect_to course_coursetextbooks_url\
    else\
      render :action => :new\
    end\
  end\
\
  # PATCH/PUT /coursetextbooks/1\
  # PATCH/PUT /coursetextbooks/1.json\
  def update\
   if @coursetextbook.update_attributes(coursetextbook_params)\
      redirect_to course_coursetextbook_path(@course,@coursetextbook)\
    else\
      render :action => :edit\
    end\
  end\
\
  # DELETE /coursetextbooks/1\
  # DELETE /coursetextbooks/1.json\
  def destroy\
    @coursetextbook.destroy\
    respond_to do |format|\
      format.html \{ redirect_to coursetextbooks_url, notice: 'Coursetextbook was successfully destroyed.' \}\
      format.json \{ head :no_content \}\
    end\
    redirect_to course_coursetextbooks_url\
  end\
\
  private\
    \
    def set_course\
     @course = Course.find(params[:course_id])\
    end\
    # Use callbacks to share common setup or constraints between actions.\
    def set_coursetextbook\
      @coursetextbook = Coursetextbook.find(params[:id])\
    end\
\
    # Never trust parameters from the scary internet, only allow the white list through.\
    def coursetextbook_params\
      params.require(:coursetextbook).permit(:title, :body, :course_id)\
    end\
end\
}